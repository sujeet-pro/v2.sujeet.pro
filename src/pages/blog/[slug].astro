---
import type { InferGetStaticPropsType } from "astro"
import { Image } from "astro:assets"
import Layout from "$layout/base-layout.astro"
import { AUTHOR_NAME } from "$constants/global"
import { MarkdownToc, ArticleContainer, ImgFigure, DateTime } from "$components"
import sujeetImg from "$assets/author.jpg"
import { Icon } from "astro-icon/components"
import { getBlogEntries } from "$modules/blog/blog.service"
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const entries = await getBlogEntries()
  const pages = entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry: entry },
  }))

  return pages
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>

// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props
const { Content, remarkPluginFrontmatter: frontmatter, headings } = await entry.render()
const { title, description, image, imageCredit, topics, publishedOn, lastUpdatedOn, isDraft, initialTocClose } =
  entry.data
const tags = topics.map((topic) => topic.slug)

const hasUpdated = publishedOn.getTime() !== lastUpdatedOn.getTime()
---

<Layout {title} {description} imageSrc={image.src}>
  <Fragment slot="seo">
    <meta property="og:type" content="article" />
    <meta property="og:article:author" content={AUTHOR_NAME} />
    {tags.map((tag) => <meta property="og:article:tag" content={tag} />)}
    <meta property="og:article:published_time" content={publishedOn.toISOString()} />
    <meta property="og:article:modified_time" content={lastUpdatedOn.toISOString()} />
  </Fragment>
  <main class="container">
    <ArticleContainer {title} {description} parentPageHref="/blog/" parentPageTitle="Blogs" {isDraft}>
      <Fragment slot="post-intro">
        <ul class="blog-meta">
          <li class="blog-author">
            <Image src={sujeetImg} alt={AUTHOR_NAME} role="presentation" class="author-img" />
            <span>{AUTHOR_NAME}</span>
          </li>
          <li class="blog-date" title={hasUpdated ? "Last updated on" : "Published on"}>
            <Icon class="icon" name={hasUpdated ? "carbon:calendar-tools" : "carbon:calendar"} />
            <DateTime date={hasUpdated ? lastUpdatedOn : publishedOn} />
          </li>
          {
            frontmatter["minutesRead"] ? (
              <li class="blog-time">
                <Icon class="icon" name="carbon:time" />
                {frontmatter["minutesRead"]}
              </li>
            ) : null
          }
        </ul>
        <ImgFigure {image} caption={imageCredit} />
        <MarkdownToc {headings} {initialTocClose} />
      </Fragment>
      <Content />
    </ArticleContainer>
  </main>
</Layout>

<style>
  @layer page {
    .blog-meta {
      display: grid;
      grid-template-areas: "author author" "date time";
      gap: var(--sp-space-4) var(--sp-space-6);
      place-items: center;
      place-content: center;
      list-style: none;
      padding-inline-start: 0;
    }

    .blog-author {
      grid-area: author;
      display: flex;
      align-items: center;
    }
    .blog-date {
      grid-area: date;
    }
    .blog-time {
      grid-area: time;
      display: flex;
      align-items: center;
    }
    .blog-time::before {
      content: "\00B7";
      margin-right: var(--sp-space-6);
      font-weight: bolder;
      font-size: var(--sp-font-size-6);
      line-height: 0;
      color: var(--sp-text-muted-color);
    }

    .icon {
      margin-right: var(--sp-space-4);
    }

    @media (min-width: 40rem) {
      .blog-meta {
        grid-template-areas: "author date time";
      }
      .blog-date {
        display: flex;
        align-items: center;
      }
      .blog-date::before {
        content: "\00B7";
        margin-right: var(--sp-space-6);
        font-weight: bolder;
        font-size: var(--sp-font-size-6);
        line-height: 0;
        color: var(--sp-text-muted-color);
      }
    }

    .author-img {
      width: var(--sp-space-10);
      height: var(--sp-space-10);
      border-radius: 50%;
      margin-right: var(--sp-space-4);
    }
  }
</style>
