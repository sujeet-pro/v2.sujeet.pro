---
import type { CollectionEntry } from "astro:content"
import { Icon } from "astro-icon/components"
import { Link } from "$components"
type Props = {
  entry: CollectionEntry<"company">
  displayDuration?: boolean
  variant?: "list" | "card"
}

const { entry, displayDuration, variant = "card" } = Astro.props
const { name, startDate, endDate, icon, linkedInUrl, role } = entry.data

const dateTimeFormatter = new Intl.DateTimeFormat("en-IN", {
  year: "numeric",
  month: "long",
})
const displayStartDate: string = typeof startDate === "object" ? dateTimeFormatter.format(startDate) : startDate
const displayEndDate: string | undefined = typeof endDate === "object" ? dateTimeFormatter.format(endDate) : endDate
---

<div
  class:list={[
    "company-details",
    {
      "company-details-list": variant === "list",
      "company-details-card": variant === "card",
    },
  ]}
>
  <Icon class="company-icon" name={icon} />
  <span class="company-name text-5">
    <Link href={linkedInUrl}>{name}</Link>
  </span>
  <span class="company-role text-3">{role}</span>
  {
    displayDuration ? (
      <span class="company-duration text-2">
        {endDate ? (
          <>
            <time datetime={displayStartDate}>{displayStartDate}</time>
            &nbsp;-&nbsp;
            <time datetime={displayEndDate}>{displayEndDate}</time>
          </>
        ) : (
          <>
            Since <time datetime={displayStartDate}>{displayStartDate}</time>
          </>
        )}
      </span>
    ) : null
  }
</div>

<style>
  @layer component.company-card {
    .company-details {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-areas: "icon" "company" "role" "duration";
      gap: var(--sp-space-3);
      padding: var(--sp-space-6) 0;
    }

    .company-details-list:not(:last-child) {
      border-bottom: var(--sp-space-1) solid var(--sp-border-color);
    }

    .company-details-card {
      margin: var(--sp-space-6) 0;
      border-top: var(--sp-space-1) solid var(--sp-border-color);
      border-bottom: var(--sp-space-1) solid var(--sp-border-color);
    }

    @media (min-width: 600px) {
      .company-details {
        grid-template-columns: 1fr min-content;
        grid-template-areas: "company icon" "role icon" "duration icon";
      }
    }

    .company-icon {
      grid-area: icon;
      align-self: center;
      height: var(--sp-space-13);
      width: auto;
    }
    .company-name {
      grid-area: company;
    }
    .company-duration {
      grid-area: duration;
      font-weight: 100;
    }
    .company-role {
      grid-area: role;
    }
  }
</style>
